type Course {
    uuid_course: ID!
    title: String!
    teacher: String
    description: String!
    topic: String
    students: [Student]
}

type Student {
    uuid_student: ID!
    name: String!
    email: String!
}

type Query {
    "Return all courses"
    getCourses: [Course]
    "Return a course"
    getCourse(uuid_course: ID!): Course
    "Return all students"
    getStudents: [Student]
    "Return a student"
    getStudent(uuid_student: ID!): Student
    
}

input CourseInput {
    title: String!
    teacher: String
    description: String!
    topic: String
}

input CourseEditInput {
    title: String
    teacher: String
    description: String
    topic: String
}

input StudentInput {
    name: String!
    email: String!
}

input StudentEditInput {
    name: String
    email: String
}

type Mutation {
    "Create a course"
    createCourse(input: CourseInput!): Course
    "Edit a course"
    editCourse(uuid_course:ID! ,input: CourseEditInput!): Course
    "Delete a course"
    deleteCourse(uuid_course:ID!): Boolean
    "Create a Student"
    createStudent(input: StudentInput!): Student
    "Edit a student"
    editStudent(uuid_student:ID!, input: StudentEditInput!): Student
    "Delete a student"
    deleteStudent(uuid_student:ID!): Boolean
    "Add a people to course"
    addPeople(uuid_course: ID!, uuid_student: ID!): Course
}